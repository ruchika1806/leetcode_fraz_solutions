// Maximum Subarray : LEETCODE-53

//T.C : O(n) 
//S.C : O(1)


//CPP
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int ans=nums[0];
        for(int i=1;i<nums.size();i++){
            nums[i]=max(nums[i],nums[i]+nums[i-1]);
            ans=max(ans,nums[i]);
        }
        return ans;
    }
};




//JavaScript
var maxSubArray = function(nums) {
    let ans=nums[0];
    let n = nums.length;
for (let i = 1; i < n; i++) {
    nums[i]=Math.max(nums[i],nums[i]+nums[i-1]);
    ans=Math.max(ans,nums[i]);
}
    return ans;
};




//Python
class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        ans=nums[0]
        for i in range (1,len(nums)):
            nums[i]=max(nums[i],nums[i-1]+nums[i])
            ans=max(ans,nums[i])
        
        return ans
